quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
# to compute variance inflation factors
vif.mer <- function (fit) {
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if (ns > 0) {
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)]
}
d <- diag(v)^0.5
v <- diag(solve(v/(d %o% d)))
names(v) <- nam
v
}
lexdec$rawRT = exp(lexdec$RT)
agr = lexdec %>%
group_by(NativeLanguage) %>%
summarize(MeanRT = mean(rawRT), CI.Low = ci.low(rawRT), CI.High = ci.high(rawRT)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High)
ggplot(agr, aes(x=NativeLanguage,y=MeanRT)) +
geom_bar(stat="identity",color="black",fill="gray60") +
geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
ggplot(agr, aes(x=NativeLanguage,y=MeanRT)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
library(ggplot2)
library(stringr)
library(textstem)
library(tidyverse)
# theme_set(theme_bw())
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
source("../../analysis/helpers.R")
d = read.table("../results/swbd.tab",sep="\t",header=T,quote="")
df_nonfinite <- d %>%
filter(Finite == "no")
nrow(df_nonfinite)/nrow(d)*100
View(df_nonfinite[,c("Item_ID","Sentence")])
str(df_nonfinite$QuestionType)
table(df_nonfinite$QuestionType)
df_nonfin_emb = d %>%
filter((QuestionType == "embedded") & (Finite == "no"))
# this gives you the number of rows
nrow(df_nonfin_emb)
# this gives you the number of columns...
# a measure for the vector of column names
length(df_nonfin_emb)
names(df_nonfin_emb)
# there are 5 unique levels of the wh column
length(unique(df_nonfin_emb$Wh))
table(df_nonfin_emb$Wh)
# how  what  when where   who
# 100    26     1     5     3
View(df_nonfin_emb["Sentence"])
# 135/30 = 4.5
# 4 lists of 30
# 1 list of 15
# OR
# 5 lists of 20
# 1 lists of 35
# Double check that there are no complex WH that are nonfinite
df_which = d %>%
filter((WhPhaseType == "complex") & (QuestionType == "embedded") & (Finite != "yes"))
nrow(df_which)
View(df_which["Sentence"])
library(MASS)
library(ordinal)
library(ggplot2)
library(tidyverse)
library(broom)
library(textstem)
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
test = read.csv("test_items_responses.csv")
corp = read.csv("test_items_corpus.csv")
#Embedding verb mean response
test %>% group_by(VerbLemma) %>% summarize(mean=mean(numResponse))
table(test$response)
test$numResponse = test$response
test$response <- ordered(as.factor(test$response))
test$Wh <- as.factor(test$Wh)
#Embedding verb mean response
test %>% group_by(VerbLemma) %>% summarize(mean=mean(numResponse))
test$VerbLemma <- as.factor(test$VerbLemma)
str(test)
#What are the log odds of getting ratings 1-7, given the embedding predicate?
model_fit_Lemma <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test, Hess=TRUE)
summary(model_fit_Lemma)
model_fit_Lemma <- clmm(response~VerbLemma +(1|workerid), data = test, Hess=TRUE)
summary(model_fit_Lemma)
contrasts(test$VerbLemma)
# Matrix Negation mean response
test %>% group_by(MatrixNegPresent) %>% summarize(mean=mean(numResponse))
#What are the log odds of getting ratings 1-7, given the presence of Matrix negation?
m_neg <- clmm(response~MatrixNegPresent +(1|workerid) +(1|tgrep_id), data = test, Hess=TRUE)
summary(m_neg)
m_neg_workerid_only <- clmm(response~MatrixNegPresent +(1|workerid), data = test, Hess=TRUE)
summary(m_neg_workerid_only)
source("helpers.R")
library(languageR)
library(lme4)
library(tidyverse)
data(lexdec)
theme_set(theme_bw())
table(lexdec$RT)
ggplot(lexdec, aes(x=RT)) +
geom_histogram()  +
xlab("Log-transformed reaction time") +
ylab("Number of cases")
ggplot(lexdec, aes(x=RT,fill=NativeLanguage)) +
geom_histogram(position="identity",alpha=.5) +
xlab("Log-transformed reaction time") +
ylab("Number of cases")
ggplot(lexdec, aes(x=RT,fill=NativeLanguage)) +
geom_density(alpha=.5) +
xlab("Log-transformed reaction time") +
ylab("Number of cases")
ggsave(file="graphs/rt_histogram.pdf",width=5,height=4)
ggplot(lexdec, aes(x=Frequency,y=RT)) +
geom_point() +
geom_smooth(method="lm")
ggplot(lexdec, aes(x=Frequency,y=RT)) +
geom_point() +
geom_smooth(method="lm") +
facet_wrap(~Subject)
library(wesanderson)
mean_rt = mean(lexdec$RT)
ggplot(lexdec, aes(x=Frequency,y=RT,color=NativeLanguage)) +
geom_smooth(method="lm") +
geom_point() +
# geom_hline(yintercept=mean_rt,linetype="dashed",color="red") +
ylab("Log-transformed reaction time") +
xlab("Log-transformed CELEX lemma frequency") +
scale_color_manual(name="Native language",values=wes_palette("Zissou1")[2:3]) +
theme(legend.position="bottom")
lexdec$rawRT = exp(lexdec$RT)
agr = lexdec %>%
group_by(NativeLanguage) %>%
summarize(MeanRT = mean(rawRT), CI.Low = ci.low(rawRT), CI.High = ci.high(rawRT)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High)
ggplot(agr, aes(x=NativeLanguage,y=MeanRT)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
#GGplots
View(test)
ggplot(test, aes(x=workerid,y=time_in_minutes)) +
geom_point()
mean(test$time_in_minutes)
summary(test$time_in_minutes)
# Were there some items that were marked as stangeSentence (1) more than others?
test %>% group_by(tgrep_id) %>% summarize(mean=mean(strangeSentence))
ggplot(test, aes(x=tgrep_id,y=strangeSentence)) +
geom_point()
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response)) %>%
ggplot(agr, aes(x=Wh,y=MeanResponse)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response))
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response))
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High)
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
ggplot(agr, aes(x=Wh,y=MeanResponse)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response))
library(lme4)
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(response), CI.Low = ci.low(response), CI.High = ci.high(response))
agr = test %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
ggplot(agr, aes(x=Wh,y=MeanResponse)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
agr = test %>%
group_by(VerbLemma) %>%
summarize(MeanLemma = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(YMin = MeanLemma - CI.Low, YMax = MeanLemma + CI.High)
ggplot(agr, aes(x=Wh,y=MeanLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
agr = test %>%
group_by(VerbLemma) %>%
summarize(MeanLemma = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(YMin = MeanLemma - CI.Low, YMax = MeanLemma + CI.High)
ggplot(agr, aes(x=VerbLemma,y=MeanLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
agr = test %>%
group_by(VerbLemma) %>%
summarize(MeanLemma = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(XMin = MeanLemma - CI.Low, XMax = MeanLemma + CI.High)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
prop.table(table(test[,c("response")]),mar=c(1))
prop.table(table(test$response))
# Were there some items that were marked as stangeSentence (1) more than others?
test %>% group_by(tgrep_id) %>% summarize(mean=mean(strangeSentence))
agr_strange = test %>%
group_by(tgrep_id) %>%
summarize(MeanStrange = mean(strangeSentence), CI.Low = ci.low(strangeSentence), CI.High = ci.high(strangeSentence)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
agr_strange = test %>%
group_by(tgrep_id) %>%
summarize(MeanStrange = mean(strangeSentence), CI.Low = ci.low(strangeSentence), CI.High = ci.high(strangeSentence)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanStrange + CI.High)
agr_strange = test %>%
group_by(tgrep_id) %>%
summarize(MeanStrange = mean(strangeSentence), CI.Low = ci.low(strangeSentence), CI.High = ci.high(strangeSentence)) %>%
mutate(YMin = MeanStrange - CI.Low, YMax = MeanStrange + CI.High)
ggplot(agr_strange, aes(x=tgrep_id,y=MeanStrange)) +
geom_point()
summarise(agr_strange)
summary(agr_strange)
ggplot(agr_strange, aes(x=tgrep_id,y=MeanStrange)) +
geom_point() +
theme(legend.position = "none",
axis.text.x = element_blank())
agr_strange_new <- subset(agr_strange, MeanStrange > 0)
ggplot(agr_strange_new, aes(x=tgrep_id,y=MeanStrange)) +
geom_point() +
theme(legend.position = "none",
axis.text.x = element_blank())
summary(agr_strange_new)
agr_strange_new %>% group_by(tgrep_id) %>% summarize(mean=mean(strangeSentence))
agr_strange_new %>% group_by(tgrep_id)
#
agr_strange_new_new <- subset(agr_strange, MeanStrange => .4)
agr_strange_exclude <- subset(agr_strange_new, MeanStrange = .4 & MeanStrange > .4 )
agr_strange_exclude %>% group_by(tgrep_id)
agr_strange_exclude <- subset(agr_strange_new, MeanStrange == .4 & MeanStrange > .4 )
agr_strange_exclude %>% group_by(tgrep_id)
agr_strange_exclude %>% group_by(tgrep_id)
summary(agr_strange_exclude)
agr_strange_exclude <- subset(agr_strange_new, MeanStrange == .4&MeanStrange > .4 )
View(agr_strange_exclude)
agr_strange_exclude <- subset(agr_strange_new, MeanStrange == 0.4&MeanStrange > 0.4)
View(agr_strange_exclude)
agr_strange_exclude <- subset(agr_strange_new, MeanStrange == 0.4)
View(agr_strange_exclude)
agr_strange_exclude <- subset(agr_strange_new, MeanStrange > 0.4)
View(agr_strange_exclude)
agr_strange_exclude <- subset(agr_strange_new, MeanStrange >= 0.4)
View(agr_strange_exclude)
ggplot(agr_strange_new, aes(x=tgrep_id,y=MeanStrange)) +
geom_histogram() +
theme(legend.position = "none",
axis.text.x = element_blank())
ggplot(agr_strange_new, aes(x=tgrep_id,y=MeanStrange)) +
geom_point() +
theme(legend.position = "none",
axis.text.x = element_blank())
View(test)
test$MeanStrange = MeanStrange
MeanStrange = test$MeanStrange
View(test)
View(agr_strange)
test_means <- left_join(test_means, agr_strange, by="tgrep_id")
test_means = left_join(test_means, agr_strange, by="tgrep_id")
test_means <- left_join(test, agr_strange, by="tgrep_id")
View(test_means)
# Exclude means of StrangeSentence that exceed 0.4
test_strange_exclude <- subset(test_means, MeanStrange < 0.4)
View(test_strange_exclude)
agr_strange_exclude <- subset(agr_strange_new,MeanStrange >= 0.4)
View(agr_strange_exclude)
m_Whmixed <- clmm(response~Wh +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_Whmixed)
summary(model_fit_Whmixed)
model_fit_Whmixed <- clmm(response~Wh +(1|workerid) +(1|tgrep_id), data = test, Hess=TRUE)
summary(model_fit_Whmixed)
m_lemma_exclude <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_lemma_exclude)
# Mixed effects model looking at whether embedding verb significantly affects response
m_lemma_tgrepid <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test, Hess=TRUE)
summary(m_lemma_tgrepid)
agr = test_strange_exclude %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
ggplot(agr, aes(x=Wh,y=MeanResponse)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
agr = test_strange_exclude %>%
group_by(VerbLemma) %>%
summarize(MeanLemma = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(XMin = MeanLemma - CI.Low, XMax = MeanLemma + CI.High)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
test %>% mutate(VerbLemmarelevel = fct_relevel(VerbLemma, "wonder"))
contrasts(test$VerbLemmarelevel)
test$VerbLemmarelevel = as.factor(test$VerbLemmarelevel)
test$VerbLemmarelevel = as.factor(VerbLemmarelevel)
test %>% mutate(VerbLemmarelevel = fct_relevel(VerbLemma, "wonder"))
fct_relevel(test$VerbLemma, "wonder")
contrasts(test$VerbLemma)
contrasts(test$VerbLemma)
test %>% group_by(VerbLemma) %>% summarize(mean=mean(numResponse))
test_only_how <- subset(test_exclude_strange, Wh = "how")
test_only_how <- subset(test_strange_exclude, Wh = "how")
m_lemma_how <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_how, Hess=TRUE)
summary(m_lemma_how)
View(test_only_how)
test_only_how <- subset(test_strange_exclude, Wh = "how")
View(test_only_how)
test_only_how <- subset(test_strange_exclude, Wh == "how")
View(test_only_how)
m_lemma_how <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_how, Hess=TRUE)
summary(m_lemma_how)
#What are the log odds of getting ratings 1-7, given the presence of Matrix negation?
m_neg <- clmm(response~MatrixNegPresent +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_neg)
View(test_strange_exclude)
m_prejacent <- clmm(response~Prejacent_specific_gen +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_prejacent)
m_prejacent <- clmm(response~Prejacent_specific_gen, Context_many_one +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
m_prejacent <- clmm(response~Prejacent_specific_gen, Context_many_one, +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
m_prejacent <- clmm(response~Context_many_one +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_prejacent)
test$Goal.included. = ifelse(test$Goal.included.=="","no",test$Goal.included.)
View(test)
# Add MeanStrange to test
test_means <- left_join(test, agr_strange, by="tgrep_id")
View(test_means)
test_strange_exclude <- subset(test_means, MeanStrange < 0.4)
View(test_strange_exclude)
m_prejacent <- clmm(response~Goal.included. +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_prejacent)
#Looking at whether the goal included predicts modal interpretation
test %>% group_by(Goal.included.) %>% summarize(mean=mean(numResponse))
agr = test_strange_exclude %>%
group_by(Wh) %>%
summarize(MeanResponse = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(YMin = MeanResponse - CI.Low, YMax = MeanResponse + CI.High)
ggplot(agr, aes(x=Wh,y=MeanResponse)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
ggplot(agr, aes(x=Wh,y=MeanResponse)) +
geom_bar(stat="identity",color="black",fill="gray60") +
xlab("Wh-word") +
ylab("Mean response") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
ggsave(file="graphs/Wh_bar_means.pdf",width=5,height=4)
ggsave(file="graphs/Wh_bar_means.pdf",width=5,height=4)
ggsave(file="Wh_bar_means.pdf",width=5,height=4)
table(corp$Wh)
table(corp$VerbLemma)
table(corp$Goal.included.)
m_Whmixed <- clmm(response~Wh +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_Whmixed)
test_only_goal <- subset (test_strange_exclude, Goal.included. == "yes")
m_goal <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_goal, Hess=TRUE)
summary(m_goal)
contrasts(test_only_goal$VerbLemma)
test_only_goal %>% group_by(VerbLemma) %>% summarize(mean=mean(numResponse))
test_only_goal <- subset(test_strange_exclude, Goal.included. == "no")
m_goal <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_goal, Hess=TRUE)
summary(m_goal)
test_only_goal %>% group_by(VerbLemma) %>% summarize(mean=mean(numResponse))
agr = test_strange_exclude %>%
group_by(VerbLemma) %>%
summarize(MeanLemma = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(XMin = MeanLemma - CI.Low, XMax = MeanLemma + CI.High)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
ggsave(file="EmbVerb_bar_means.pdf",width=5,height=4)
ggplot(agr, aes(x=MeanLemma,y=VerbLemma)) +
geom_bar(stat="identity",color="black",fill="gray60") +
xlab("Mean Response") +
ylab("Embedding Verb") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(xmin=XMin,xmax=XMax),width=.25)
ggsave(file="EmbVerb_bar_means.pdf",width=5,height=4)
agr_strange = test %>%
group_by(tgrep_id) %>%
summarize(MeanStrange = mean(strangeSentence), CI.Low = ci.low(strangeSentence), CI.High = ci.high(strangeSentence)) %>%
mutate(YMin = MeanStrange - CI.Low, YMax = MeanStrange + CI.High)
agr_strange_new <- subset(agr_strange, MeanStrange > 0)
ggplot(agr_strange_new, aes(x=tgrep_id,y=MeanStrange)) +
geom_point() +
theme(legend.position = "none",
axis.text.x = element_blank())
ggplot(agr_strange_new, aes(x=tgrep_id,y=MeanStrange)) +
geom_point() +
xlab("Item ID") +
ylab("Mean marked 'Strange'") +
theme(legend.position = "none",
axis.text.x = element_blank())
ggsave(file="MeanStrange.pdf",width=5,height=4)
# Exclude means of StrangeSentence that exceed 0.4
agr_strange_exclude <- subset(agr_strange_new,MeanStrange >= 0.4)
View(agr_strange_exclude)
View(test_means)
write.csv(test_means, "test_means.csv", row.names = FALSE)
agr = test_strange_exclude %>%
group_by(Goal.included.) %>%
summarize(MeanGoal = mean(numResponse), CI.Low = ci.low(numResponse), CI.High = ci.high(numResponse)) %>%
mutate(YMin = MeanGoal - CI.Low, YMax = MeanGoal + CI.High)
ggplot(agr, aes(x=Goal.included.,y=MeanGoal)) +
geom_bar(stat="identity",color="black",fill="gray60") +
xlab("Goal included") +
ylab("Mean response") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
ggsave(file="Goal_included_means.pdf",width=5,height=4)
ggplot(agr, aes(x=Goal.included.,y=MeanGoal)) +
geom_bar(stat="identity",color="black",fill="gray60") +
xlab("Goal included in the prejacent") +
ylab("Mean response") +
# geom_jitter(data=lexdec,aes(y=rawRT),alpha=.2,color="lightblue") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
ggsave(file="Goal_included_means.pdf",width=5,height=4)
test_only_how <- subset(test_strange_exclude, Wh == "how")
m_lemma_how <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_how, Hess=TRUE)
m_Whmixed <- clmm(response~Wh +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_Whmixed)
summary(m_prejacent)
contrasts(test_strange_exclude$VerbLemma)
temp = test_strange_exclude %>%
mutate(VerbLemma = fct_relevel(VerbLemma, "wonder"))
contrasts(temp$VerbLemma)
test_strange_exclude %>%
mutate(VerbLemma = fct_relevel(VerbLemma, "wonder"))
test_strange_exclude = test_strange_exclude %>%
mutate(VerbLemma = fct_relevel(VerbLemma, "wonder"))
m_lemma_exclude <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_lemma_exclude)
test_strange_exclude = test_strange_exclude %>%
mutate(VerbLemma = fct_relevel(VerbLemma, "tell"))
m_lemma_exclude <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_strange_exclude, Hess=TRUE)
summary(m_lemma_exclude)
test_only_how <- subset(test_strange_exclude, Wh == "how")
m_lemma_how <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_how, Hess=TRUE)
summary(m_lemma_how)
contrasts(test_only_how$VerbLemma)
test_only_what <- subset(test_strange_exclude, Wh == "what")
m_lemma_what <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_what, Hess=TRUE)
summary(m_lemma_what)
test_only_how = test_only_how %>%
mutate(VerbLemma = fct_relevel(VerbLemma, "wonder"))
contrasts(test_only_how$VerbLemma)
m_lemma_how <- clmm(response~VerbLemma +(1|workerid) +(1|tgrep_id), data = test_only_how, Hess=TRUE)
summary(m_lemma_how)
test %>% group_by(Wh) %>% summarize(mean=mean(numResponse))
